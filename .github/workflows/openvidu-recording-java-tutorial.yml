name: openvidu-recording-java-tutorial 

on: 
  push:
   

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1
      
    - name: Create recording directory
      run: |
        sudo mkdir -p /opt/openvidu/recordings
        sudo chmod -R a+rwx /opt/openvidu/recordings
        
    - name:  Run OpenVidu deployment
      run: |
        docker run -p 4443:4443 --rm \
        -e OPENVIDU_SECRET=MY_SECRET \
        -e OPENVIDU_RECORDING=true \
        -e OPENVIDU_RECORDING_PATH=/opt/openvidu/recordings \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /opt/openvidu/recordings:/opt/openvidu/recordings \
        openvidu/openvidu-dev:2.29.0 > results/logs/openvidu_deployment.log 2>&1 &
        sleep 10
    
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
  

    - name: Run server and client application sample
      working-directory: openvidu-recording-java
      run: |
        mvn package exec:java > ../results/logs/server_client_application.log 2>&1 &
        sleep 10
        
    - name: Install dependencies
      run: npm ci
      
     
    
    - name: Install Playwright Browsers
      run: npx playwright install

    - name: Install playwright-test
      run: npm install @playwright/test
      
    - name: Runing Test
      working-directory: tests
      run: |  
         npx playwright test tests/openvidu-recording-java-tutorial.spec.js
         
    - name: Copy recordings
      working-directory: /opt/openvidu/recordings
      run: |
        sudo zip -r /home/runner/work/openvidu-tutorials-tests-playwright/openvidu-tutorials-tests-playwright/results/recordings.zip .
  
         
    - uses:  actions/upload-artifact@v4
      if: always()
      with:
        name: results-recording-java
        path: /home/runner/work/openvidu-tutorials-tests-playwright/openvidu-tutorials-tests-playwright/results/
        retention-days: 30
