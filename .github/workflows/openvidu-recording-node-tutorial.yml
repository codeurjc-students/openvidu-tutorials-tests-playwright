name: openvidu-recording-node-tutorial 

on: 
  workflow_dispatch: {}
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout  
      uses: actions/checkout@v4.1.1

    - name: Create recording directory
      run: |
        sudo mkdir -p /opt/openvidu/recordings
        sudo chmod -R a+rwx /opt/openvidu/recordings
        
    - name:  Run OpenVidu deployment
      run: |
        docker run -p 4443:4443 --rm \
        -e OPENVIDU_SECRET=MY_SECRET \
        -e OPENVIDU_RECORDING=true \
        -e OPENVIDU_RECORDING_PATH=/opt/openvidu/recordings \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /opt/openvidu/recordings:/opt/openvidu/recordings \
        openvidu/openvidu-dev:2.29.0 > results/logs/docker.log 2>&1 &
        sleep 10
    
    - uses: actions/setup-node@v3

    - name: Run server application sample
      working-directory: openvidu-recording-node
      run: |
        npm install
        node server.js > ../results/logs/node_server.log 2>&1 &
        sleep 10
        
    - name: Install dependencies
      run: npm ci
      
    - uses: browser-actions/setup-chrome@v1
    
    - name: Install Playwright Browsers
      run: npx playwright install 
      
    - name: Runin Test
      working-directory: tests
      run: |   
         npx playwright test tests/openvidu-recording-node-tutorial.spec.js
         
    - name: Copy recordings
      working-directory: /opt/openvidu/recordings
      run: |
        sudo zip -r /home/runner/work/openvidu-tutorials-tests-playwright/openvidu-tutorials-tests-playwright/results/recordings.zip .
  
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: results-recording-node
        path: /home/runner/work/openvidu-tutorials-tests-playwright/openvidu-tutorials-tests-playwright/results/
        retention-days: 30
